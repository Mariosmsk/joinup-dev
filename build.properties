# Paths
# -----

# Paths to executables.
drush.bin = ${project.basedir}/vendor/bin/drush
phing.bin = ${project.basedir}/vendor/bin/phing

# Files and directories inside the Drupal installation.
website.drupal.dir = ${project.basedir}/web
website.services.yml = ${website.settings.dir}/services.yml
website.settings.dir = ${website.sites.dir}/default
website.sites.dir = ${website.drupal.dir}/sites
website.services.yml.default = ${website.settings.dir}/default.services.yml
website.modules.dir = ${website.drupal.dir}/modules
website.profiles.dir = ${website.drupal.dir}/profiles
website.themes.dir = ${website.drupal.dir}/themes

# Temporary files.
tmp.dir = ${project.basedir}/tmp


# Drush configuration
# -------------------

# The location of the Drush configuration folder.
drush.dir = ${project.basedir}/drush

# Verbosity of Drush commands. Set to 'true' for verbose output.
drush.verbose = false


# Behat configuration
# -------------------

# The location of the Behat executable.
behat.bin = ${project.basedir}/vendor/bin/behat

# The location of the Behat tests.
behat.dir = ${project.basedir}/tests

# The location of the Behat configuration template.
behat.yml.template = ${behat.dir}/behat.yml.dist

# The location of the generated Behat configuration file.
behat.yml.path = ${behat.dir}/behat.yml

# The base URL to use in Behat tests.
behat.base_url = ${env.DRUPAL_BASE_URL}

# The browser to use for testing, either 'firefox' or 'chrome'.
behat.browser_name = chrome

# The port of the webdriver host (e.g. Selenium or PhantomJS).
behat.webdriver_port = 4444

# The URL of the webdriver host (e.g. Selenium or PhantomJS).
behat.webdriver_url = http://localhost:${behat.webdriver_port}/wd/hub

# The location to search for Behat subcontexts.
behat.subcontexts.path = ${website.modules.dir}

# The output format to use for Behat tests, either 'progress' or 'pretty'.
behat.formatter.name = progress

# The location of the test files.
behat.files.path = ${behat.dir}/fixtures/files

# Enable strict mode in Behat tests. Will only pass if all tests are explicitly
# passing.
behat.options.strict = false

# Set verbosity for Behat tests. 0 is completely silent, 1 is normal output, 2
# shows exception backtraces, 3 shows debugging information.
behat.options.verbosity = 2

# The location where to save screenshots that are taken whenever a test fails.
# If left empty no screenshots will be taken.
# behat.screenshots.local.dir = ${tmp.dir}/behat-screenshots
behat.screenshots.local.dir =

# The location on AWS S3 where to upload screenshots that are taken whenever a
# test fails. This is especially helpful for storing screenshots taken during
# test runs on continuous integration services. The S3 bucket, key and secret
# to use are configured in the 'AWS S3' section below.
# If either this or any of the 'AWS S3' properties are left empty no screenshots
# will be uploaded to S3.
# behat.screenshots.s3.dir = behat-screenshots
behat.screenshots.s3.dir =


# PHP CodeSniffer configuration
# -----------------------------

# The file extensions to test.
phpcs.extensions = php inc module install info test profile theme css js

# The default configuration file to generate.
phpcs.config = ${project.basedir}/phpcs.xml

# The coding standard to use. If you want to customize the rules, make a copy of
# the file and name it 'phpcs-ruleset.xml'. Then copy this property to your
# build.properties file and remove the '.dist' suffix.
phpcs.standard = ${project.basedir}/phpcs-ruleset.xml.dist

# Paths to check, delimited by semicolons.
phpcs.files = ${website.modules.dir};${website.profiles.dir};${website.themes.dir}

# Whether or not to run a coding standards check before doing a git push. Note
# that this will abort the push if the coding standards check fails.
phpcs.prepush.enable = 1

# Paths to check, delimited by semicolons.
phpcs.files = ${website.modules.dir};${website.profiles.dir};${website.themes.dir};${behat.dir}/src;${project.basedir}/src

# Paths to ignore, delimited by semicolons.
phpcs.ignore = ${website.modules.dir}/contrib;${website.themes.dir}/joinup/prototype;${website.modules.dir}/custom/joinup_communities/tallinn/lib

# The report format. For example 'full', 'summary', 'diff', 'xml', 'json'.
phpcs.report = full

# Whether or not to show sniff codes in the report.
phpcs.sniffcodes = 0

# Whether or not to show the progress of the run.
phpcs.progress = 1

# The location of the file containing the global configuration options.
phpcs.global.config = ${project.basedir}/vendor/squizlabs/php_codesniffer/CodeSniffer.conf

# The source and destination paths of the git pre-push hook.
phpcs.prepush.source = ${project.basedir}/vendor/pfrenssen/phpcs-pre-push/pre-push
phpcs.prepush.destination = ${project.basedir}/.git/hooks/pre-push


# PHPUnit configuration
# ---------------------

# The path to the configuration file template.
phpunit.dist = ${project.basedir}/phpunit.xml.dist

# The path to the generated configuration file.
phpunit.config = ${project.basedir}/phpunit.xml

# The base URL to use in functional tests.
phpunit.base_url = ${env.DRUPAL_BASE_URL}

# The database URL to use in kernel tests and functional tests.
phpunit.db_url = mysql://${env.DRUPAL_DATABASE_USERNAME}:${env.DRUPAL_DATABASE_PASSWORD}@${env.DRUPAL_DATABASE_HOST}:${env.DRUPAL_DATABASE_PORT}/${env.DRUPAL_DATABASE_NAME}

# The path to the directory where HTML output from browsertests is stored.
phpunit.browsertest_output_dir = ${website.sites.dir}/simpletest/browser_output

# The path to the file that lists HTML output from browsertests.
phpunit.browsertest_output_file = ${phpunit.browsertest_output_dir}/outputfile.txt

# The database URL for testing SPARQL queries.
phpunit.sparql_url = sparql://${env.SPARQL_HOST}:${env.SPARQL_PORT}/


# AWS SDK
# -------
aws.profile = default
aws.region = eu-west-1


# AWS S3
# ------

# The S3 bucket that contains the database dumps.
exports.s3.bucket = joinup2

# The key and secret to access the bucket. If left empty the credentials will
# be retrieved from the environment. For documentation on how to set the
# credentials on the environment, see \Aws\Credentials\CredentialProvider.
exports.s3.key =
exports.s3.secret =


# Redis configuration
# -------------------

# The IP address of the Redis host.
# Uncomment this line to enable the Redis cache.
# redis.host = 127.0.0.1


# Drupal Test Traits (DTT) settings.
# ----------------------------------

dtt.base_url = ${env.DRUPAL_BASE_URL}
dtt.api_url = ${behat.webdriver_url}
dtt.mink_driver_args = ['chrome', null, 'http://localhost:4444/wd/hub']
