<?xml version="1.0" encoding="UTF-8" ?>

<project name="Joinup" default="help">

    <includepath classpath="src/Phing" />

    <!-- Import Phing targets related to ContinuousPHP. -->
    <import file="${project.basedir}/build.continuousphp.xml" optional="true" />

    <echo msg="Loading Amazon S3 download task." />
    <taskdef name="s3dl" classname="\Joinup\Phing\AwsS3GetTask" />

    <echo msg="Loading Amazon S3 list task." />
    <taskdef name="s3list" classname="\Joinup\Phing\AwsS3ListTask" />

    <echo msg="Loading Drush task." />
    <taskdef name="drush" classname="\Phing\Drush\Task" />

    <echo msg="Loading PHP Codesniffer Configuration task." />
    <taskdef name="phpcodesnifferconfiguration" classname="\Joinup\Phing\PhpCodeSnifferConfigurationTask" />

    <echo msg="Loading PHPUnit Configuration task." />
    <taskdef name="phpunitconfiguration" classname="\Joinup\Phing\PhpUnitConfigurationTask" />

    <target name="help" description="Phing target list">
        <exec executable="${phing.bin}"
              passthru="true">
            <arg value="-l"/>
        </exec>
    </target>

    <!-- Set up PHP CodeSniffer. -->
    <target name="setup-php-codesniffer" description="Generate the configuration file for PHP CodeSniffer.">
        <echo message="Generating PHP Codesniffer configuration files." />
        <phpcodesnifferconfiguration
                configFile="${phpcs.config}"
                extensions="${phpcs.extensions}"
                files="${phpcs.files}"
                globalConfig="${phpcs.global.config}"
                ignorePatterns="${phpcs.ignore}"
                report="${phpcs.report}"
                showProgress="${phpcs.progress}"
                showSniffCodes="${phpcs.sniffcodes}"
                standard="${phpcs.standard}" />

        <!-- Set up the git pre-push hook. -->
        <phingcall target="disable-pre-push" />
        <if>
            <equals arg1="${phpcs.prepush.enable}" arg2="1" />
            <then>
                <symlink link="${phpcs.prepush.destination}" target="${phpcs.prepush.source}" overwrite="true" />
            </then>
        </if>
    </target>

    <!-- Disable the PHP CodeSniffer pre-push hook. -->
    <target name="disable-pre-push" description="Disable the coding standards check when pushing to a git repository.">
        <delete file="${phpcs.prepush.destination}" failonerror="false" />
    </target>

    <!-- Set up Behat. -->
    <target name="setup-behat" description="Generate the configuration file for Behat.">
        <echo message="Creating behat.yml configuration file" />
        <loadfile property="behat.yml.content" file="${behat.yml.template}" />
        <echo message="${behat.yml.content}" file="${behat.yml.path}" />
    </target>

    <!-- Set up PHPUnit. -->
    <target name="setup-phpunit" description="Generate the configuration file for PHPUnit.">
        <phpunitconfiguration
                configFile="${phpunit.config}"
                distFile="${phpunit.dist}"
                baseUrl="${phpunit.base_url}"
                dbUrl="${phpunit.db_url}"
                sparqlUrl="${phpunit.sparql_url}"
                browsertestOutputDirectory="${phpunit.browsertest_output_dir}"
                browsertestOutputFile="${phpunit.browsertest_output_file}"
                dttBaseUrl="${dtt.base_url}"
                dttApiUrl="${dtt.api_url}"
                dttMinkDriverArgs="${dtt.mink_driver_args}" />

        <!-- Create the directory and file for browsertest output. -->
        <mkdir dir="${phpunit.browsertest_output_dir}" />
        <touch file="${phpunit.browsertest_output_file}" />

    </target>

</project>
