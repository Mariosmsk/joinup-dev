<?php

/**
 * @file
 * Contains hooks and functions for the eif module.
 */

declare(strict_types = 1);

use Drupal\Component\Utility\UrlHelper;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\block\Entity\Block;

/**
 * Implements hook_entity_field_access().
 */
function eif_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, ?FieldItemListInterface $items = NULL): AccessResultInterface {
  if ($field_definition->getName() !== 'field_is_eif_recommendation' || $operation !== 'edit') {
    return AccessResult::neutral();
  }

  // If the user does not have the permission, the result will be forbidden. If
  // the user has access, the result will be neutral and the default access
  // result for fields will be enforced, which is the allowed.
  return AccessResult::forbiddenIf(!$account->hasPermission('edit eif recommendations'));
}

/**
 * Implements hook_block_access().
 *
 * Workaround for facets not properly narrowing down results.
 *
 * @see https://citnet.tech.ec.europa.eu/CITnet/jira/browse/ISAICP-6090
 */
function eif_block_access(Block $block, $operation, AccountInterface $account): AccessResultInterface {
  $data = [
    'principle' => ['conceptual_model', 'interoperability_layer'],
    'conceptualmodel' => ['principle', 'interoperability_layer'],
    'interoperabilitylayer' => ['principle', 'conceptual_model'],
  ];

  if (!in_array($block->id(), array_keys($data))) {
    return AccessResult::neutral();
  }

  $route_match = \Drupal::routeMatch();
  if ($route_match->getRouteName() !== 'view.eif_recommendations.page_1') {
    return AccessResult::neutral();
  }
  $path = \Drupal::request()->getUri();

  $parts = UrlHelper::parse($path);
  if (empty($parts['query']['f'])) {
    return AccessResult::neutral();
  }

  foreach ($parts['query']['f'] as $filter) {
    foreach ($data[$block->id()] as $needle) {
      if (strpos($filter, $needle . ':') === 0) {
        return AccessResult::forbidden();
      }
    }
  }

  return AccessResult::neutral();
}
